"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/sonner";
exports.ids = ["vendor-chunks/sonner"];
exports.modules = {

/***/ "(ssr)/./node_modules/sonner/dist/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/sonner/dist/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Toaster: () => (/* binding */ oe),\n/* harmony export */   toast: () => (/* binding */ At)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* __next_internal_client_entry_do_not_use__ Toaster,toast auto */ \n\nfunction it(l, { insertAt: a } = {}) {\n    if (!l || typeof document == \"undefined\") return;\n    let t = document.head || document.getElementsByTagName(\"head\")[0], s = document.createElement(\"style\");\n    s.type = \"text/css\", a === \"top\" && t.firstChild ? t.insertBefore(s, t.firstChild) : t.appendChild(s), s.styleSheet ? s.styleSheet.cssText = l : s.appendChild(document.createTextNode(l));\n}\nit(`html[dir=ltr],[data-sonner-toaster][dir=ltr]{--toast-icon-margin-start: -3px;--toast-icon-margin-end: 4px;--toast-svg-margin-start: -1px;--toast-svg-margin-end: 0px;--toast-button-margin-start: auto;--toast-button-margin-end: 0;--toast-close-button-start: 0;--toast-close-button-end: unset;--toast-close-button-transform: translate(-35%, -35%)}html[dir=rtl],[data-sonner-toaster][dir=rtl]{--toast-icon-margin-start: 4px;--toast-icon-margin-end: -3px;--toast-svg-margin-start: 0px;--toast-svg-margin-end: -1px;--toast-button-margin-start: 0;--toast-button-margin-end: auto;--toast-close-button-start: unset;--toast-close-button-end: 0;--toast-close-button-transform: translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1: hsl(0, 0%, 99%);--gray2: hsl(0, 0%, 97.3%);--gray3: hsl(0, 0%, 95.1%);--gray4: hsl(0, 0%, 93%);--gray5: hsl(0, 0%, 90.9%);--gray6: hsl(0, 0%, 88.7%);--gray7: hsl(0, 0%, 85.8%);--gray8: hsl(0, 0%, 78%);--gray9: hsl(0, 0%, 56.1%);--gray10: hsl(0, 0%, 52.3%);--gray11: hsl(0, 0%, 43.5%);--gray12: hsl(0, 0%, 9%);--border-radius: 8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:none;z-index:999999999}[data-sonner-toaster][data-x-position=right]{right:max(var(--offset),env(safe-area-inset-right))}[data-sonner-toaster][data-x-position=left]{left:max(var(--offset),env(safe-area-inset-left))}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translate(-50%)}[data-sonner-toaster][data-y-position=top]{top:max(var(--offset),env(safe-area-inset-top))}[data-sonner-toaster][data-y-position=bottom]{bottom:max(var(--offset),env(safe-area-inset-bottom))}[data-sonner-toast]{--y: translateY(100%);--lift-amount: calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;will-change:transform,opacity,height;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:none;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px #0000001a;width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px #0000001a,0 0 0 2px #0003}[data-sonner-toast][data-y-position=top]{top:0;--y: translateY(-100%);--lift: 1;--lift-amount: calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y: translateY(100%);--lift: -1;--lift-amount: calc(var(--lift) * var(--gap))}[data-sonner-toast] [data-description]{font-weight:400;line-height:1.4;color:inherit}[data-sonner-toast] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast] [data-icon]>*{flex-shrink:0}[data-sonner-toast] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;cursor:pointer;outline:none;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast] [data-button]:focus-visible{box-shadow:0 0 0 2px #0006}[data-sonner-toast] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toast][data-theme=dark] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;background:var(--gray1);color:var(--gray12);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast] [data-close-button]:focus-visible{box-shadow:0 4px 12px #0000001a,0 0 0 2px #0003}[data-sonner-toast] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]:before{content:\"\";position:absolute;left:0;right:0;height:100%}[data-sonner-toast][data-y-position=top][data-swiping=true]:before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]:before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]:before{content:\"\";position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast]:after{content:\"\";position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y: translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale: var(--toasts-before) * .05 + 1;--y: translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y: translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y: translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y: translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y: translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]:before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount, 0px));transition:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation:swipe-out .2s ease-out forwards}@keyframes swipe-out{0%{transform:translateY(calc(var(--lift) * var(--offset) + var(--swipe-amount)));opacity:1}to{transform:translateY(calc(var(--lift) * var(--offset) + var(--swipe-amount) + var(--lift) * -100%));opacity:0}}@media (max-width: 600px){[data-sonner-toaster]{position:fixed;--mobile-offset: 16px;right:var(--mobile-offset);left:var(--mobile-offset);width:100%}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - 32px)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset)}[data-sonner-toaster][data-y-position=bottom]{bottom:20px}[data-sonner-toaster][data-y-position=top]{top:20px}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset);right:var(--mobile-offset);transform:none}}[data-sonner-toaster][data-theme=light]{--normal-bg: #fff;--normal-border: var(--gray4);--normal-text: var(--gray12);--success-bg: hsl(143, 85%, 96%);--success-border: hsl(145, 92%, 91%);--success-text: hsl(140, 100%, 27%);--info-bg: hsl(208, 100%, 97%);--info-border: hsl(221, 91%, 91%);--info-text: hsl(210, 92%, 45%);--warning-bg: hsl(49, 100%, 97%);--warning-border: hsl(49, 91%, 91%);--warning-text: hsl(31, 92%, 45%);--error-bg: hsl(359, 100%, 97%);--error-border: hsl(359, 100%, 94%);--error-text: hsl(360, 100%, 45%)}[data-sonner-toaster][data-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg: #000;--normal-border: hsl(0, 0%, 20%);--normal-text: var(--gray1)}[data-sonner-toaster][data-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg: #fff;--normal-border: var(--gray3);--normal-text: var(--gray12)}[data-sonner-toaster][data-theme=dark]{--normal-bg: #000;--normal-border: hsl(0, 0%, 20%);--normal-text: var(--gray1);--success-bg: hsl(150, 100%, 6%);--success-border: hsl(147, 100%, 12%);--success-text: hsl(150, 86%, 65%);--info-bg: hsl(215, 100%, 6%);--info-border: hsl(223, 100%, 12%);--info-text: hsl(216, 87%, 65%);--warning-bg: hsl(64, 100%, 6%);--warning-border: hsl(60, 100%, 12%);--warning-text: hsl(46, 87%, 65%);--error-bg: hsl(358, 76%, 10%);--error-border: hsl(357, 89%, 16%);--error-text: hsl(358, 100%, 81%)}[data-rich-colors=true] [data-sonner-toast][data-type=success],[data-rich-colors=true] [data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true] [data-sonner-toast][data-type=info],[data-rich-colors=true] [data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true] [data-sonner-toast][data-type=warning],[data-rich-colors=true] [data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true] [data-sonner-toast][data-type=error],[data-rich-colors=true] [data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size: 16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:nth-child(1){animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}to{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}to{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}to{opacity:.15}}@media (prefers-reduced-motion){[data-sonner-toast],[data-sonner-toast]>*,.sonner-loading-bar{transition:none!important;animation:none!important}}.loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}\n`);\n\nvar Tt = (l)=>{\n    switch(l){\n        case \"success\":\n            return Dt;\n        case \"info\":\n            return Rt;\n        case \"warning\":\n            return Pt;\n        case \"error\":\n            return Ht;\n        default:\n            return null;\n    }\n}, Ct = Array(12).fill(0), wt = ({ visible: l })=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"sonner-loading-wrapper\",\n        \"data-visible\": l\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"sonner-spinner\"\n    }, Ct.map((a, t)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"sonner-loading-bar\",\n            key: `spinner-bar-${t}`\n        })))), Dt = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\",\n    clipRule: \"evenodd\"\n})), Pt = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\",\n    clipRule: \"evenodd\"\n})), Rt = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z\",\n    clipRule: \"evenodd\"\n})), Ht = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z\",\n    clipRule: \"evenodd\"\n}));\nvar lt = 1, dt = class {\n    constructor(){\n        this.subscribe = (a)=>(this.subscribers.push(a), ()=>{\n                let t = this.subscribers.indexOf(a);\n                this.subscribers.splice(t, 1);\n            });\n        this.publish = (a)=>{\n            this.subscribers.forEach((t)=>t(a));\n        };\n        this.addToast = (a)=>{\n            this.publish(a), this.toasts = [\n                ...this.toasts,\n                a\n            ];\n        };\n        this.create = (a)=>{\n            var m;\n            let { message: t, ...s } = a, y = typeof (a == null ? void 0 : a.id) == \"number\" || ((m = a.id) == null ? void 0 : m.length) > 0 ? a.id : lt++, p = this.toasts.find((d)=>d.id === y), f = a.dismissible === void 0 ? !0 : a.dismissible;\n            return p ? this.toasts = this.toasts.map((d)=>d.id === y ? (this.publish({\n                    ...d,\n                    ...a,\n                    id: y,\n                    title: t\n                }), {\n                    ...d,\n                    ...a,\n                    id: y,\n                    dismissible: f,\n                    title: t\n                }) : d) : this.addToast({\n                title: t,\n                ...s,\n                dismissible: f,\n                id: y\n            }), y;\n        };\n        this.dismiss = (a)=>(a || this.toasts.forEach((t)=>{\n                this.subscribers.forEach((s)=>s({\n                        id: t.id,\n                        dismiss: !0\n                    }));\n            }), this.subscribers.forEach((t)=>t({\n                    id: a,\n                    dismiss: !0\n                })), a);\n        this.message = (a, t)=>this.create({\n                ...t,\n                message: a\n            });\n        this.error = (a, t)=>this.create({\n                ...t,\n                message: a,\n                type: \"error\"\n            });\n        this.success = (a, t)=>this.create({\n                ...t,\n                type: \"success\",\n                message: a\n            });\n        this.info = (a, t)=>this.create({\n                ...t,\n                type: \"info\",\n                message: a\n            });\n        this.warning = (a, t)=>this.create({\n                ...t,\n                type: \"warning\",\n                message: a\n            });\n        this.loading = (a, t)=>this.create({\n                ...t,\n                type: \"loading\",\n                message: a\n            });\n        this.promise = (a, t)=>{\n            if (!t) return;\n            let s;\n            t.loading !== void 0 && (s = this.create({\n                ...t,\n                promise: a,\n                type: \"loading\",\n                message: t.loading\n            }));\n            let y = a instanceof Promise ? a : a(), p = s !== void 0;\n            return y.then((f)=>{\n                if (f && typeof f.ok == \"boolean\" && !f.ok) {\n                    p = !1;\n                    let m = typeof t.error == \"function\" ? t.error(`HTTP error! status: ${f.status}`) : t.error;\n                    this.create({\n                        id: s,\n                        type: \"error\",\n                        message: m\n                    });\n                } else if (t.success !== void 0) {\n                    p = !1;\n                    let m = typeof t.success == \"function\" ? t.success(f) : t.success;\n                    this.create({\n                        id: s,\n                        type: \"success\",\n                        message: m\n                    });\n                }\n            }).catch((f)=>{\n                if (t.error !== void 0) {\n                    p = !1;\n                    let m = typeof t.error == \"function\" ? t.error(f) : t.error;\n                    this.create({\n                        id: s,\n                        type: \"error\",\n                        message: m\n                    });\n                }\n            }).finally(()=>{\n                var f;\n                p && (this.dismiss(s), s = void 0), (f = t.finally) == null || f.call(t);\n            }), s;\n        };\n        this.custom = (a, t)=>{\n            let s = (t == null ? void 0 : t.id) || lt++;\n            return this.create({\n                jsx: a(s),\n                id: s,\n                ...t\n            }), s;\n        };\n        this.subscribers = [], this.toasts = [];\n    }\n}, T = new dt, Lt = (l, a)=>{\n    let t = (a == null ? void 0 : a.id) || lt++;\n    return T.addToast({\n        title: l,\n        ...a,\n        id: t\n    }), t;\n}, zt = Lt, At = Object.assign(zt, {\n    success: T.success,\n    info: T.info,\n    warning: T.warning,\n    error: T.error,\n    custom: T.custom,\n    message: T.message,\n    promise: T.promise,\n    dismiss: T.dismiss,\n    loading: T.loading\n});\nvar jt = 3, Ft = \"32px\", $t = 4e3, Ut = 356, St = 14, _t = 20, Vt = 200;\nfunction Y(...l) {\n    return l.filter(Boolean).join(\" \");\n}\nvar Wt = (l)=>{\n    var mt, gt, pt, ht, bt, yt, vt;\n    let { invert: a, toast: t, unstyled: s, interacting: y, setHeights: p, visibleToasts: f, heights: m, index: d, toasts: G, expanded: j, removeToast: V, closeButton: q, style: r, cancelButtonStyle: W, actionButtonStyle: Q, className: Z = \"\", descriptionClassName: tt = \"\", duration: S, position: F, gap: et = St, loadingIcon: $, expandByDefault: U, classNames: i, closeButtonAriaLabel: B = \"Close toast\" } = l, [P, K] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [X, R] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [C, J] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [k, H] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [at, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0), [g, h] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0), M = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), x = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), c = d === 0, _ = d + 1 <= f, v = t.type, L = t.dismissible !== !1, kt = t.className || \"\", It = t.descriptionClassName || \"\", O = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>m.findIndex((o)=>o.toastId === t.id) || 0, [\n        m,\n        t.id\n    ]), ot = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>t.duration || S || $t, [\n        t.duration,\n        S\n    ]), st = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0), z = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0), Kt = react__WEBPACK_IMPORTED_MODULE_0__.useRef(ot), ct = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0), A = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), [ut, Nt] = F.split(\"-\"), ft = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>m.reduce((o, u, b)=>b >= O ? o : o + u.height, 0), [\n        m,\n        O\n    ]), Mt = t.invert || a, rt = v === \"loading\";\n    z.current = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>O * et + ft, [\n        O,\n        ft\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        K(!0);\n    }, []), react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        if (!P) return;\n        let o = x.current, u = o.style.height;\n        o.style.height = \"auto\";\n        let b = o.getBoundingClientRect().height;\n        o.style.height = u, h(b), p((I)=>I.find((w)=>w.toastId === t.id) ? I.map((w)=>w.toastId === t.id ? {\n                    ...w,\n                    height: b\n                } : w) : [\n                {\n                    toastId: t.id,\n                    height: b\n                },\n                ...I\n            ]);\n    }, [\n        P,\n        t.title,\n        t.description,\n        p,\n        t.id\n    ]);\n    let D = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        R(!0), n(z.current), p((o)=>o.filter((u)=>u.toastId !== t.id)), setTimeout(()=>{\n            V(t);\n        }, Vt);\n    }, [\n        t,\n        V,\n        p,\n        z\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (t.promise && v === \"loading\" || t.duration === 1 / 0) return;\n        let o, u = ot;\n        return j || y ? (()=>{\n            if (ct.current < st.current) {\n                let N = new Date().getTime() - st.current;\n                u = u - N;\n            }\n            ct.current = new Date().getTime();\n        })() : (()=>{\n            st.current = new Date().getTime(), o = setTimeout(()=>{\n                var N;\n                (N = t.onAutoClose) == null || N.call(t, t), D();\n            }, u);\n        })(), ()=>clearTimeout(o);\n    }, [\n        j,\n        y,\n        U,\n        t,\n        ot,\n        D,\n        t.promise,\n        v\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let o = x.current;\n        if (o) {\n            let u = o.getBoundingClientRect().height;\n            return h(u), p((b)=>[\n                    {\n                        toastId: t.id,\n                        height: u\n                    },\n                    ...b\n                ]), ()=>p((b)=>b.filter((I)=>I.toastId !== t.id));\n        }\n    }, [\n        p,\n        t.id\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        t.delete && D();\n    }, [\n        D,\n        t.delete\n    ]);\n    function Bt() {\n        return $ ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"loader\",\n            \"data-visible\": v === \"loading\"\n        }, $) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(wt, {\n            visible: v === \"loading\"\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", {\n        \"aria-live\": t.important ? \"assertive\" : \"polite\",\n        \"aria-atomic\": \"true\",\n        role: \"status\",\n        tabIndex: 0,\n        ref: x,\n        className: Y(Z, kt, i == null ? void 0 : i.toast, (mt = t == null ? void 0 : t.classNames) == null ? void 0 : mt.toast, i == null ? void 0 : i[v], (gt = t == null ? void 0 : t.classNames) == null ? void 0 : gt[v]),\n        \"data-sonner-toast\": \"\",\n        \"data-styled\": !(t.jsx || t.unstyled || s),\n        \"data-mounted\": P,\n        \"data-promise\": !!t.promise,\n        \"data-removed\": X,\n        \"data-visible\": _,\n        \"data-y-position\": ut,\n        \"data-x-position\": Nt,\n        \"data-index\": d,\n        \"data-front\": c,\n        \"data-swiping\": C,\n        \"data-dismissible\": L,\n        \"data-type\": v,\n        \"data-invert\": Mt,\n        \"data-swipe-out\": k,\n        \"data-expanded\": !!(j || U && P),\n        style: {\n            \"--index\": d,\n            \"--toasts-before\": d,\n            \"--z-index\": G.length - d,\n            \"--offset\": `${X ? at : z.current}px`,\n            \"--initial-height\": U ? \"auto\" : `${g}px`,\n            ...r,\n            ...t.style\n        },\n        onPointerDown: (o)=>{\n            rt || !L || (M.current = new Date, n(z.current), o.target.setPointerCapture(o.pointerId), o.target.tagName !== \"BUTTON\" && (J(!0), A.current = {\n                x: o.clientX,\n                y: o.clientY\n            }));\n        },\n        onPointerUp: ()=>{\n            var I, N, w, nt;\n            if (k || !L) return;\n            A.current = null;\n            let o = Number(((I = x.current) == null ? void 0 : I.style.getPropertyValue(\"--swipe-amount\").replace(\"px\", \"\")) || 0), u = new Date().getTime() - ((N = M.current) == null ? void 0 : N.getTime()), b = Math.abs(o) / u;\n            if (Math.abs(o) >= _t || b > .11) {\n                n(z.current), (w = t.onDismiss) == null || w.call(t, t), D(), H(!0);\n                return;\n            }\n            (nt = x.current) == null || nt.style.setProperty(\"--swipe-amount\", \"0px\"), J(!1);\n        },\n        onPointerMove: (o)=>{\n            var xt;\n            if (!A.current || !L) return;\n            let u = o.clientY - A.current.y, b = o.clientX - A.current.x, N = (ut === \"top\" ? Math.min : Math.max)(0, u), w = o.pointerType === \"touch\" ? 10 : 2;\n            Math.abs(N) > w ? (xt = x.current) == null || xt.style.setProperty(\"--swipe-amount\", `${u}px`) : Math.abs(b) > w && (A.current = null);\n        }\n    }, q && !t.jsx ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        \"aria-label\": B,\n        \"data-disabled\": rt,\n        \"data-close-button\": !0,\n        onClick: rt || !L ? ()=>{} : ()=>{\n            var o;\n            D(), (o = t.onDismiss) == null || o.call(t, t);\n        },\n        className: Y(i == null ? void 0 : i.closeButton, (pt = t == null ? void 0 : t.classNames) == null ? void 0 : pt.closeButton)\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"12\",\n        height: \"12\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"1.5\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", {\n        x1: \"18\",\n        y1: \"6\",\n        x2: \"6\",\n        y2: \"18\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"line\", {\n        x1: \"6\",\n        y1: \"6\",\n        x2: \"18\",\n        y2: \"18\"\n    }))) : null, t.jsx || /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(t.title) ? t.jsx || t.title : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, v || t.icon || t.promise ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        \"data-icon\": \"\"\n    }, (t.promise || t.type === \"loading\") && !t.icon ? Bt() : null, t.icon || Tt(v)) : null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        \"data-content\": \"\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        \"data-title\": \"\",\n        className: Y(i == null ? void 0 : i.title, (ht = t == null ? void 0 : t.classNames) == null ? void 0 : ht.title)\n    }, t.title), t.description ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        \"data-description\": \"\",\n        className: Y(tt, It, i == null ? void 0 : i.description, (bt = t == null ? void 0 : t.classNames) == null ? void 0 : bt.description)\n    }, t.description) : null), t.cancel ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        \"data-button\": !0,\n        \"data-cancel\": !0,\n        style: t.cancelButtonStyle || W,\n        onClick: ()=>{\n            var o;\n            L && (D(), (o = t.cancel) != null && o.onClick && t.cancel.onClick());\n        },\n        className: Y(i == null ? void 0 : i.cancelButton, (yt = t == null ? void 0 : t.classNames) == null ? void 0 : yt.cancelButton)\n    }, t.cancel.label) : null, t.action ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        \"data-button\": \"\",\n        style: t.actionButtonStyle || Q,\n        onClick: (o)=>{\n            var u;\n            (u = t.action) == null || u.onClick(o), !o.defaultPrevented && D();\n        },\n        className: Y(i == null ? void 0 : i.actionButton, (vt = t == null ? void 0 : t.classNames) == null ? void 0 : vt.actionButton)\n    }, t.action.label) : null));\n};\nfunction Et() {\n    if (true) return \"ltr\";\n    let l = document.documentElement.getAttribute(\"dir\");\n    return l === \"auto\" || !l ? window.getComputedStyle(document.documentElement).direction : l;\n}\nvar oe = (l)=>{\n    let { invert: a, position: t = \"bottom-right\", hotkey: s = [\n        \"altKey\",\n        \"KeyT\"\n    ], expand: y, closeButton: p, className: f, offset: m, theme: d = \"light\", richColors: G, duration: j, style: V, visibleToasts: q = jt, toastOptions: r, dir: W = Et(), gap: Q, loadingIcon: Z, containerAriaLabel: tt = \"Notifications\" } = l, [S, F] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), et = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>Array.from(new Set([\n            t\n        ].concat(S.filter((n)=>n.position).map((n)=>n.position)))), [\n        S,\n        t\n    ]), [$, U] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), [i, B] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [P, K] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [X, R] = react__WEBPACK_IMPORTED_MODULE_0__.useState(d !== \"system\" ? d :  false ? 0 : \"light\"), C = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), J = s.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\"), k = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), H = react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1), at = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((n)=>F((g)=>g.filter(({ id: h })=>h !== n.id)), []);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>T.subscribe((n)=>{\n            if (n.dismiss) {\n                F((g)=>g.map((h)=>h.id === n.id ? {\n                            ...h,\n                            delete: !0\n                        } : h));\n                return;\n            }\n            setTimeout(()=>{\n                react_dom__WEBPACK_IMPORTED_MODULE_1__.flushSync(()=>{\n                    F((g)=>{\n                        let h = g.findIndex((M)=>M.id === n.id);\n                        return h !== -1 ? [\n                            ...g.slice(0, h),\n                            {\n                                ...g[h],\n                                ...n\n                            },\n                            ...g.slice(h + 1)\n                        ] : [\n                            n,\n                            ...g\n                        ];\n                    });\n                });\n            });\n        }), []), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (d !== \"system\") {\n            R(d);\n            return;\n        }\n        d === \"system\" && (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? R(\"dark\") : R(\"light\")),  false && 0;\n    }, [\n        d\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        S.length <= 1 && B(!1);\n    }, [\n        S\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let n = (g)=>{\n            var M, x;\n            s.every((c)=>g[c] || g.code === c) && (B(!0), (M = C.current) == null || M.focus()), g.code === \"Escape\" && (document.activeElement === C.current || (x = C.current) != null && x.contains(document.activeElement)) && B(!1);\n        };\n        return document.addEventListener(\"keydown\", n), ()=>document.removeEventListener(\"keydown\", n);\n    }, [\n        s\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (C.current) return ()=>{\n            k.current && (k.current.focus({\n                preventScroll: !0\n            }), k.current = null, H.current = !1);\n        };\n    }, [\n        C.current\n    ]), S.length ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"section\", {\n        \"aria-label\": `${tt} ${J}`,\n        tabIndex: -1\n    }, et.map((n, g)=>{\n        var x;\n        let [h, M] = n.split(\"-\");\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ol\", {\n            key: n,\n            dir: W === \"auto\" ? Et() : W,\n            tabIndex: -1,\n            ref: C,\n            className: f,\n            \"data-sonner-toaster\": !0,\n            \"data-theme\": X,\n            \"data-rich-colors\": G,\n            \"data-y-position\": h,\n            \"data-x-position\": M,\n            style: {\n                \"--front-toast-height\": `${(x = $[0]) == null ? void 0 : x.height}px`,\n                \"--offset\": typeof m == \"number\" ? `${m}px` : m || Ft,\n                \"--width\": `${Ut}px`,\n                \"--gap\": `${St}px`,\n                ...V\n            },\n            onBlur: (c)=>{\n                H.current && !c.currentTarget.contains(c.relatedTarget) && (H.current = !1, k.current && (k.current.focus({\n                    preventScroll: !0\n                }), k.current = null));\n            },\n            onFocus: (c)=>{\n                c.target instanceof HTMLElement && c.target.dataset.dismissible === \"false\" || H.current || (H.current = !0, k.current = c.relatedTarget);\n            },\n            onMouseEnter: ()=>B(!0),\n            onMouseMove: ()=>B(!0),\n            onMouseLeave: ()=>{\n                P || B(!1);\n            },\n            onPointerDown: (c)=>{\n                c.target instanceof HTMLElement && c.target.dataset.dismissible === \"false\" || K(!0);\n            },\n            onPointerUp: ()=>K(!1)\n        }, S.filter((c)=>!c.position && g === 0 || c.position === n).map((c, _)=>{\n            var v;\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Wt, {\n                key: c.id,\n                index: _,\n                toast: c,\n                duration: (v = r == null ? void 0 : r.duration) != null ? v : j,\n                className: r == null ? void 0 : r.className,\n                descriptionClassName: r == null ? void 0 : r.descriptionClassName,\n                invert: a,\n                visibleToasts: q,\n                closeButton: p,\n                interacting: P,\n                position: n,\n                style: r == null ? void 0 : r.style,\n                unstyled: r == null ? void 0 : r.unstyled,\n                classNames: r == null ? void 0 : r.classNames,\n                cancelButtonStyle: r == null ? void 0 : r.cancelButtonStyle,\n                actionButtonStyle: r == null ? void 0 : r.actionButtonStyle,\n                removeToast: at,\n                toasts: S,\n                heights: $,\n                setHeights: U,\n                expandByDefault: y,\n                gap: Q,\n                loadingIcon: Z,\n                expanded: i\n            });\n        }));\n    })) : null;\n};\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/sonner/dist/index.mjs\n");

/***/ })

};
;